#!/bin/bash
#SBATCH -N 1
#SBATCH -A PAS2699
#SBATCH -J "om_{{om}}_{{sensor_type}}_{{date}}"
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --exclusive
#SBATCH --mem=0 # This gets the full memory of the node and stores it in SLURM_MEM_PER_NODE
#SBATCH -o "{{ processing_dir }}logs_om/%j-{{job_title}}-om.txt"
#SBATCH --time=10:00:00


export MPLBACKEND=Agg

# Define the directories
num_cores=$(nproc)
echo Number of cores: $num_cores
free -h

start_time=$(date +%s)

job_name="{{ job_title }}"
img_dir="{{ input_path }}"
processing_subdir="{{ processing_subdir }}_$SLURM_JOB_ID"
om_dir="{{ om_dir }}"

{{script_dir}}/{{script_name}} "$job" "$img_dir" "$processing_subdir" $num_cores

om="{{om}}"
sensor_type="{{sensor_type}}"
date="{{date}}"

om_filename="{{job_title}}.tif"

# Move and rename the output file
if [ -f "$processing_subdir/code/odm_orthophoto/odm_orthophoto.tif" ]; then
    mv "$processing_subdir/code/odm_orthophoto/odm_orthophoto.tif" "$om_dir/$om_filename"
    echo "Orthomosaic moved and renamed to $om_filename."
else
    echo "Error: Orthomosaic file not found!"
fi

end_time=$(date +%s)
execution_time=$((end_time - start_time))

processing_step="om"

echo "Processing completed."
echo "Total execution time: $execution_time seconds"

source /fs/ess/PAS2699/envs/miniconda3/etc/profile.d/conda.sh
conda activate harvest

echo "finding area of orthomosaic in square meters"

area_m2=$(python -u ../utils/get_om_area.py --ortho "$om_dir/$om_filename" --unit "m2")

output_size=$(du -sh "$om_dir/$om_filename" | awk '{print $1}')

log_dir={{logdir_perf}}
log_file="$log_dir/execution_times_om.csv"

# Check if the log file exists
if [ ! -f "$log_file" ]; then
  # File doesn't exist, so write the header
  echo "job_id,job_name,processing_step,num_cores,memory,start_time,end_time,execution_time,area_m2,output_size" > "$log_file"
fi

# Append the data
echo "$SLURM_JOB_ID,$job_name,$processing_step,$num_cores,$SLURM_MEM_PER_NODE,$start_time,$end_time,$execution_time,$area_m2,$output_size" >> "$log_file"

echo "All jobs are done, total time of execution: $execution_time seconds"